## "Функция: Сжатие данных(RLE)"
### Описание алгоритма RLE(run-length encoding)
# Кодирование длин серий (RLE) — это простая форма сжатия данных без потерь,
# которая выполняется для последовательностей с одним и тем же значением,
# повторяющимся много раз подряд. Он кодирует последовательность
# для хранения только одного значения и его количества.
# # Например, рассмотрим строку: \
# `aaaabbcccccccddddgggggggggggg`
# С помощью алгоритма RLE, ее можно сжать в такую: \
# `4a2b7c4d12g`
# # Т.е. мы просто считаем количество одинаковых символов подряд и вместо `aaaa` -> `4a`
# Написать функцию кодирования исходной строки.


def char_replace(string: str):

count = 0
new_string = ""
for char in string[1:]:
    if char == string[0]:
        count += 1


        .....
    return ...

def rle_encode(string: str) # -> str:
    return list(map(char_replace, string))

base_str = input("Введите строку символов: ")
result_str = rle_encode(base_str)
print("Строка закодированная алгоритмом RLE:", result_str)
